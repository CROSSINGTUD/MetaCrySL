SPEC javax.crypto.SecretKeyFactory
  
OBJECTS 
   
   java.lang.String algorithm; 
   
   javax.crypto.SecretKey key; 
   
   javax.crypto.SecretKey otherKey; 
   
   java.security.spec.KeySpec keySpec; 
   
   int keylength; 
 


EVENTS 
   
    g1: getInstance(algorithm); 
   
    g2: getInstance(algorithm, _); 
   
    Gets := g1 | g2; 
   
    gS: key = generateSecret(keySpec); 
   
    tK: key = translateKey(otherKey); 
   
    Gens := gS | tK; 
 

ORDER
  Gets, Gens

CONSTRAINTS
   
    algorithm in {"PBEwithSHA1ANDRC2", "PBEwithHmacSHA1", "PBEwithHmacSHA224AndAES_256", "PBEwithHmacSHA1AndAES_256", "PBKDF2withHmacSHA224", "PBEwithHmacSHA512AndAES_128", "PBEwithHmacSHA1AndAES_128", "PBEwithMD5ANDDES", "PBEwithSHA256AND256BITAES-CBC-BC", "PBEwithSHAAND2-KEYTRIPLEDES-CBC", "PBKDF2withHmacSHA384", "PBEwithSHAAND40BITRC2-CBC", "PBEwithSHAAND3-KEYTRIPLEDES-CBC", "PBEwithMD5AND192BITAES-CBC-OPENSSL", "PBEwithSHAAND256BITAES-CBC-BC", "PBEwithSHA256AND192BITAES-CBC-BC", "PBEwithMD5AND256BITAES-CBC-OPENSSL", "PBEwithMD5ANDRC2", "PBEwithHmacSHA384AndAES_128", "PBEwithHmacSHA256AndAES_256", "PBEwithSHAANDTWOFISH-CBC	", "PBKDF2withHmacSHA512", "PBEwithHmacSHA384AndAES_256", "PBKDF2withHmacSHA256", "PBEwithSHAAND192BITAES-CBC-BC", "PBKDF2withHmacSHA1", "PBEwithSHAAND128BITRC4", "PBEwithSHA1ANDDES", "PBEwithSHA256AND128BITAES-CBC-BC", "PBEwithHmacSHA224AndAES_128", "DESede", "PBEwithHmacSHA256AndAES_128", "PBEwithMD5AND128BITAES-CBC-OPENSSL", "PBEwithHmacSHA512AndAES_256", "PBEwithSHAAND40BITRC4", "PBEwithSHAAND128BITRC2-CBC", "PBEwithSHAAND128BITAES-CBC-BC"}; 
 
                                  
REQUIRES
  
    speccedKey[keySpec, _];
 
                           
ENSURES
  
    generatedKey[key, algorithm];
 
                           

