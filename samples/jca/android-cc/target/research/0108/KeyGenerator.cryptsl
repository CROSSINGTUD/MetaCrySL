SPEC javax.crypto.KeyGenerator
  
OBJECTS 
   
   int keySize; 
   
   java.security.spec.AlgorithmParameterSpec params; 
   
   javax.crypto.SecretKey key; 
   
   java.lang.String alg; 
   
   java.security.SecureRandom ranGen; 
 


EVENTS 
   
    g1: getInstance(alg); 
   
    g2: getInstance(alg, _); 
   
    Gets := g1 | g2; 
   
    i1: init(keySize); 
   
    i2: init(keySize, ranGen); 
   
    i3: init(params); 
   
    i4: init(params, ranGen); 
   
    i5: init(ranGen); 
   
    Inits := i1 | i2 | i3 | i4 | i5; 
   
    gk: key = generateKey(); 
 

ORDER
  Gets, Inits?, gk

CONSTRAINTS
   
    alg in {"HmacSHA224", "HmacSHA256", "AES", "HmacSHA384", "HmacSHA512"}; 
   
    alg in {"AES"} => keySize in {256, 128, 192}; 
 
                                  
REQUIRES
  
    randomized[ranGen];
 
                           
ENSURES
  
    generatedKey[key, alg];
 
                           

